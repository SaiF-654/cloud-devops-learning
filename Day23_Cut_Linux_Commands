Real-Time Log Analysis Using cut in Linux
🧠 Objective:
Understanding cut command used to extract specific fields, columns, or character ranges from lines of text in files or command outputs. 
It is commonly used to parse structured data like CSV, log files, or configuration files by isolating only the required portions of each line based on a specified delimiter.
In Cloud Administration, cut is used to:
Extract instance IDs, IPs, usernames, or service names from reports and logs.
Process AWS CLI or Azure CLI outputs formatted as CSV or tabular text.
Automate data extraction in scripts for monitoring or auditing.


This will build your foundational skills in Linux text processing, which are essential for DevOps, system administration, and cloud operations roles.


🏭 Industry Scenario:
You are a Cloud Administrator at a cloud-based SaaS company that hosts services on AWS cloud and Azure cloud. Your organization’s security policy mandates regular auditing of:
EC2 instance status
IAM user login capabilities
SSH access attempts
Server performance logs


You need to extract specific data from various system-generated or downloaded reports to generate a compliance dashboard.
✅ Prerequisites:
Running EC2 instance (Ubuntu)
Create IAM user
Give EC2 full permissions 
Access EC2 via IAM use

📌 Part 1: cut Command
✅ What is cut?
cut is used to extract specific fields or columns from a text file or output, based on a delimiter.


🔰 Basic Syntax:
cut -d [delimiter] -f [field_number] [file]

📁 Dummy Files
📁 1. users.csv 
username,email,role
john,john@example.com,admin
alice,alice@example.com,developer
bob,bob@example.com,analyst

📁 2. ec2_instances.csv i-0a1b2c3d4e5f6g7h,WebServer,t2.micro,us-east-1a,34.205.10.1,running
i-1a2b3c4d5e6f7g8h,DBServer,t2.medium,us-west-2b,52.13.45.10,stopped
i-9z8y7x6w5v4u3t2s,AppServer,t3.small,eu-central-1a,18.184.22.99,running

📁 3. auth.log 
May 27 10:23:44 server sshd[12345]: Accepted password for admin from 192.168.1.5 port 45520
May 27 10:25:10 server sshd[12347]: Failed password for root from 203.0.113.15 port 49821
May 27 10:26:11 server sshd[12349]: Failed password for user1 from 198.51.100.22 port 50731


📁 4. iam_users.csv 

username,created_date,password_enabled,mfa_active,console_access
dev_user,2024-01-15,true,true,true
admin_user,2023-12-01,true,false,true
read_only,2024-05-01,false,false,false

🧪 Basic Examples:
🔹 Example 1: Extract usernames from /etc/passwd (1st Column)
cut -d ':' -f 1 /etc/passwd

🔹 Example 2: Get the shell of each user (7th Column)
cut -d ':' -f 7 /etc/passwd

⚙️ Intermediate Usage:
🔹 Example 3: Combine with grep to filter and extract
grep "bash" /etc/passwd | cut -d ':' -f 1

🔹 Example 4: Extract multiple fields
cut -d ':' -f 1,7 /etc/passwd

🔹 Example 5: Use with cat and pipe
cat users.csv | cut -d ',' -f 2


🚀 Advanced Usage:
🔹 Example 6: Extract AWS instance IDs from a CSV
cat ec2_instances.csv | cut -d ',' -f 1

🔹 Example 7: Use with awk or grep for filtering and transforming data
grep "running" ec2_instances.csv | cut -d ',' -f 2
awk -F',' '/running/ { print $2 }' ec2_instances.csv

💼 Cloud Admin Use Cases for cut
🧰 Use Case 1: Extract IAM usernames from CSV
cut -d ',' -f 1 iam_users.csv

🧰 Use Case 2: Display instance IDs and names
cut -d ',' -f 1,2 ec2_instances.csv

🧰 Use Case 3: Get list of public IPs from EC2 inventory
cut -d ',' -f 5 ec2_instances.csv


🧪 Combined Example: Real-Time Cloud Log Audit
🎯 Goal: Find all failed SSH login attempts and show IPs
grep "Failed password" /var/log/auth.log | cut -d ' ' -f 11
📌 Explanation:
grep searches for failed login attempts.
cut extracts the IP address from the log line.
.

🎓 Summary Table
Command
Purpose
Cloud Admin Use Case
grep "ERROR" file
Find errors
Check logs
grep -r "pattern" dir/
Recursive search
Scan config dirs
cut -d ':' -f1
Extract usernames
Parse system user list
`grep "ssh"
cut -d ' ' -f11`
Extract IPs
grep -v "127.0.0.1"
Exclude local IPs
Filter access logs


🛠️ Practice Tasks
Find all successful SSH logins:

grep "Accepted password" /var/log/auth.log
Extract all public IPs from EC2 logs:

cat ec2_logs.txt | grep "PublicIp" | cut -d ':' -f 2
Show all users using /bin/bash:

grep "/bin/bash" /etc/passwd | cut -d ':' -f1
Extract CPU Usage and Strip the '%' Symbol
cut -d ',' -f3 perf_log.txt | cut -d ':' -f2 | sed 's/%//'



